name: MIRAI Learn Daily
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 世界時0時=日本時間9時
jobs:
  train:
    runs-on: [self-hosted, Windows, X64]
    steps:
      - uses: actions/checkout@v4

      - name: Install Portable Python 3.10
        shell: powershell
        run: |
          $url = 'https://www.python.org/ftp/python/3.10.11/python-3.10.11-embed-amd64.zip'
          $zip = "$env:RUNNER_TEMP\py.zip"
          Invoke-WebRequest -Uri $url -OutFile $zip
          $dir = "$env:RUNNER_TEMP\py310"
          New-Item -ItemType Directory -Force -Path $dir | Out-Null
          Expand-Archive -Path $zip -DestinationPath $dir -Force
          (Get-Content "$dir\python310._pth") -replace '#import site','import site' | Set-Content "$dir\python310._pth"
          "PY=$dir" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8

      - name: Run training
        shell: powershell
        run: |
          & "$env:PY\python.exe" .\scripts\learn_task.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: learn-artifacts
          path: artifacts/
          if-no-files-found: ignore

      - name: Notify (Discord or Slack)
        if: always()
        shell: powershell
        env:
          WEBHOOK: ${{ secrets.NOTIFY_WEBHOOK }}
          STATUS: ${{ job.status }}
        run: |
          $ok = $env:STATUS -eq 'success'
          $title = if ($ok) { "✅ MIRAI Learn Daily 成功" } else { "❌ MIRAI Learn Daily 失敗" }
          $text  = "$title`nrepo: $env:GITHUB_REPOSITORY`nrun: $env:GITHUB_RUN_NUMBER`nurl: $env:GITHUB_SERVER_URL/$env:GITHUB_REPOSITORY/actions/runs/$env:GITHUB_RUN_ID"

          # Discord（content）
          try {
            $payload = @{ content = $text } | ConvertTo-Json -Depth 3
            Invoke-RestMethod -Uri $env:WEBHOOK -Method Post -ContentType 'application/json' -Body $payload -ErrorAction Stop
          } catch {
            # Slack（text）
            $payload = @{ text = $text } | ConvertTo-Json -Depth 3
            Invoke-RestMethod -Uri $env:WEBHOOK -Method Post -ContentType 'application/json' -Body $payload
          }
